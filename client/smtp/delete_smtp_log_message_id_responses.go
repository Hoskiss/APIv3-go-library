// Code generated by go-swagger; DO NOT EDIT.

package smtp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"APIv3_go_wrapper/models"
)

// DeleteSMTPLogMessageIDReader is a Reader for the DeleteSMTPLogMessageID structure.
type DeleteSMTPLogMessageIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSMTPLogMessageIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteSMTPLogMessageIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSMTPLogMessageIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteSMTPLogMessageIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSMTPLogMessageIDNoContent creates a DeleteSMTPLogMessageIDNoContent with default headers values
func NewDeleteSMTPLogMessageIDNoContent() *DeleteSMTPLogMessageIDNoContent {
	return &DeleteSMTPLogMessageIDNoContent{}
}

/*DeleteSMTPLogMessageIDNoContent handles this case with default header values.

Transactional Logs deleted
*/
type DeleteSMTPLogMessageIDNoContent struct {
}

func (o *DeleteSMTPLogMessageIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /smtp/log/{messageId}][%d] deleteSmtpLogMessageIdNoContent ", 204)
}

func (o *DeleteSMTPLogMessageIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSMTPLogMessageIDBadRequest creates a DeleteSMTPLogMessageIDBadRequest with default headers values
func NewDeleteSMTPLogMessageIDBadRequest() *DeleteSMTPLogMessageIDBadRequest {
	return &DeleteSMTPLogMessageIDBadRequest{}
}

/*DeleteSMTPLogMessageIDBadRequest handles this case with default header values.

bad request
*/
type DeleteSMTPLogMessageIDBadRequest struct {
	Payload *models.ErrorModel
}

func (o *DeleteSMTPLogMessageIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /smtp/log/{messageId}][%d] deleteSmtpLogMessageIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSMTPLogMessageIDBadRequest) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *DeleteSMTPLogMessageIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSMTPLogMessageIDNotFound creates a DeleteSMTPLogMessageIDNotFound with default headers values
func NewDeleteSMTPLogMessageIDNotFound() *DeleteSMTPLogMessageIDNotFound {
	return &DeleteSMTPLogMessageIDNotFound{}
}

/*DeleteSMTPLogMessageIDNotFound handles this case with default header values.

Message ID not found
*/
type DeleteSMTPLogMessageIDNotFound struct {
	Payload *models.ErrorModel
}

func (o *DeleteSMTPLogMessageIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /smtp/log/{messageId}][%d] deleteSmtpLogMessageIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSMTPLogMessageIDNotFound) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *DeleteSMTPLogMessageIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
