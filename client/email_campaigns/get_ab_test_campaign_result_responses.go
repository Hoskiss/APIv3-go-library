// Code generated by go-swagger; DO NOT EDIT.

package email_campaigns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"APIv3_go_wrapper/models"
)

// GetAbTestCampaignResultReader is a Reader for the GetAbTestCampaignResult structure.
type GetAbTestCampaignResultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAbTestCampaignResultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAbTestCampaignResultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAbTestCampaignResultBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAbTestCampaignResultNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAbTestCampaignResultOK creates a GetAbTestCampaignResultOK with default headers values
func NewGetAbTestCampaignResultOK() *GetAbTestCampaignResultOK {
	return &GetAbTestCampaignResultOK{}
}

/*GetAbTestCampaignResultOK handles this case with default header values.

A/B test email campaign Result
*/
type GetAbTestCampaignResultOK struct {
	Payload *models.AbTestCampaignResult
}

func (o *GetAbTestCampaignResultOK) Error() string {
	return fmt.Sprintf("[GET /emailCampaigns/{campaignId}/abTestCampaignResult][%d] getAbTestCampaignResultOK  %+v", 200, o.Payload)
}

func (o *GetAbTestCampaignResultOK) GetPayload() *models.AbTestCampaignResult {
	return o.Payload
}

func (o *GetAbTestCampaignResultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AbTestCampaignResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAbTestCampaignResultBadRequest creates a GetAbTestCampaignResultBadRequest with default headers values
func NewGetAbTestCampaignResultBadRequest() *GetAbTestCampaignResultBadRequest {
	return &GetAbTestCampaignResultBadRequest{}
}

/*GetAbTestCampaignResultBadRequest handles this case with default header values.

bad request
*/
type GetAbTestCampaignResultBadRequest struct {
	Payload *models.ErrorModel
}

func (o *GetAbTestCampaignResultBadRequest) Error() string {
	return fmt.Sprintf("[GET /emailCampaigns/{campaignId}/abTestCampaignResult][%d] getAbTestCampaignResultBadRequest  %+v", 400, o.Payload)
}

func (o *GetAbTestCampaignResultBadRequest) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *GetAbTestCampaignResultBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAbTestCampaignResultNotFound creates a GetAbTestCampaignResultNotFound with default headers values
func NewGetAbTestCampaignResultNotFound() *GetAbTestCampaignResultNotFound {
	return &GetAbTestCampaignResultNotFound{}
}

/*GetAbTestCampaignResultNotFound handles this case with default header values.

A/B test Email Campaign not found
*/
type GetAbTestCampaignResultNotFound struct {
	Payload *models.ErrorModel
}

func (o *GetAbTestCampaignResultNotFound) Error() string {
	return fmt.Sprintf("[GET /emailCampaigns/{campaignId}/abTestCampaignResult][%d] getAbTestCampaignResultNotFound  %+v", 404, o.Payload)
}

func (o *GetAbTestCampaignResultNotFound) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *GetAbTestCampaignResultNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
