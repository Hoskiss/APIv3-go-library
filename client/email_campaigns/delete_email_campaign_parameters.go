// Code generated by go-swagger; DO NOT EDIT.

package email_campaigns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteEmailCampaignParams creates a new DeleteEmailCampaignParams object
// with the default values initialized.
func NewDeleteEmailCampaignParams() *DeleteEmailCampaignParams {
	var ()
	return &DeleteEmailCampaignParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteEmailCampaignParamsWithTimeout creates a new DeleteEmailCampaignParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteEmailCampaignParamsWithTimeout(timeout time.Duration) *DeleteEmailCampaignParams {
	var ()
	return &DeleteEmailCampaignParams{

		timeout: timeout,
	}
}

// NewDeleteEmailCampaignParamsWithContext creates a new DeleteEmailCampaignParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteEmailCampaignParamsWithContext(ctx context.Context) *DeleteEmailCampaignParams {
	var ()
	return &DeleteEmailCampaignParams{

		Context: ctx,
	}
}

// NewDeleteEmailCampaignParamsWithHTTPClient creates a new DeleteEmailCampaignParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteEmailCampaignParamsWithHTTPClient(client *http.Client) *DeleteEmailCampaignParams {
	var ()
	return &DeleteEmailCampaignParams{
		HTTPClient: client,
	}
}

/*DeleteEmailCampaignParams contains all the parameters to send to the API endpoint
for the delete email campaign operation typically these are written to a http.Request
*/
type DeleteEmailCampaignParams struct {

	/*CampaignID
	  id of the campaign

	*/
	CampaignID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete email campaign params
func (o *DeleteEmailCampaignParams) WithTimeout(timeout time.Duration) *DeleteEmailCampaignParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete email campaign params
func (o *DeleteEmailCampaignParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete email campaign params
func (o *DeleteEmailCampaignParams) WithContext(ctx context.Context) *DeleteEmailCampaignParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete email campaign params
func (o *DeleteEmailCampaignParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete email campaign params
func (o *DeleteEmailCampaignParams) WithHTTPClient(client *http.Client) *DeleteEmailCampaignParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete email campaign params
func (o *DeleteEmailCampaignParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCampaignID adds the campaignID to the delete email campaign params
func (o *DeleteEmailCampaignParams) WithCampaignID(campaignID int64) *DeleteEmailCampaignParams {
	o.SetCampaignID(campaignID)
	return o
}

// SetCampaignID adds the campaignId to the delete email campaign params
func (o *DeleteEmailCampaignParams) SetCampaignID(campaignID int64) {
	o.CampaignID = campaignID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteEmailCampaignParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param campaignId
	if err := r.SetPathParam("campaignId", swag.FormatInt64(o.CampaignID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
