// Code generated by go-swagger; DO NOT EDIT.

package email_campaigns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// UpdateEmailCampaignReader is a Reader for the UpdateEmailCampaign structure.
type UpdateEmailCampaignReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEmailCampaignReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateEmailCampaignNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateEmailCampaignBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateEmailCampaignNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateEmailCampaignNoContent creates a UpdateEmailCampaignNoContent with default headers values
func NewUpdateEmailCampaignNoContent() *UpdateEmailCampaignNoContent {
	return &UpdateEmailCampaignNoContent{}
}

/*UpdateEmailCampaignNoContent handles this case with default header values.

Email Campaign has been updated
*/
type UpdateEmailCampaignNoContent struct {
}

func (o *UpdateEmailCampaignNoContent) Error() string {
	return fmt.Sprintf("[PUT /emailCampaigns/{campaignId}][%d] updateEmailCampaignNoContent ", 204)
}

func (o *UpdateEmailCampaignNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmailCampaignBadRequest creates a UpdateEmailCampaignBadRequest with default headers values
func NewUpdateEmailCampaignBadRequest() *UpdateEmailCampaignBadRequest {
	return &UpdateEmailCampaignBadRequest{}
}

/*UpdateEmailCampaignBadRequest handles this case with default header values.

bad request
*/
type UpdateEmailCampaignBadRequest struct {
	Payload *models.ErrorModel
}

func (o *UpdateEmailCampaignBadRequest) Error() string {
	return fmt.Sprintf("[PUT /emailCampaigns/{campaignId}][%d] updateEmailCampaignBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateEmailCampaignBadRequest) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *UpdateEmailCampaignBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEmailCampaignNotFound creates a UpdateEmailCampaignNotFound with default headers values
func NewUpdateEmailCampaignNotFound() *UpdateEmailCampaignNotFound {
	return &UpdateEmailCampaignNotFound{}
}

/*UpdateEmailCampaignNotFound handles this case with default header values.

Campaign ID not found
*/
type UpdateEmailCampaignNotFound struct {
	Payload *models.ErrorModel
}

func (o *UpdateEmailCampaignNotFound) Error() string {
	return fmt.Sprintf("[PUT /emailCampaigns/{campaignId}][%d] updateEmailCampaignNotFound  %+v", 404, o.Payload)
}

func (o *UpdateEmailCampaignNotFound) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *UpdateEmailCampaignNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
