// Code generated by go-swagger; DO NOT EDIT.

package s_m_s_campaigns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// SendSmsReportReader is a Reader for the SendSmsReport structure.
type SendSmsReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendSmsReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSendSmsReportNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSendSmsReportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSendSmsReportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendSmsReportNoContent creates a SendSmsReportNoContent with default headers values
func NewSendSmsReportNoContent() *SendSmsReportNoContent {
	return &SendSmsReportNoContent{}
}

/*SendSmsReportNoContent handles this case with default header values.

Report has been successfully sent to the defined recipients
*/
type SendSmsReportNoContent struct {
}

func (o *SendSmsReportNoContent) Error() string {
	return fmt.Sprintf("[POST /smsCampaigns/{campaignId}/sendReport][%d] sendSmsReportNoContent ", 204)
}

func (o *SendSmsReportNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSendSmsReportBadRequest creates a SendSmsReportBadRequest with default headers values
func NewSendSmsReportBadRequest() *SendSmsReportBadRequest {
	return &SendSmsReportBadRequest{}
}

/*SendSmsReportBadRequest handles this case with default header values.

bad request
*/
type SendSmsReportBadRequest struct {
	Payload *models.ErrorModel
}

func (o *SendSmsReportBadRequest) Error() string {
	return fmt.Sprintf("[POST /smsCampaigns/{campaignId}/sendReport][%d] sendSmsReportBadRequest  %+v", 400, o.Payload)
}

func (o *SendSmsReportBadRequest) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *SendSmsReportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendSmsReportNotFound creates a SendSmsReportNotFound with default headers values
func NewSendSmsReportNotFound() *SendSmsReportNotFound {
	return &SendSmsReportNotFound{}
}

/*SendSmsReportNotFound handles this case with default header values.

Campaign ID not found
*/
type SendSmsReportNotFound struct {
	Payload *models.ErrorModel
}

func (o *SendSmsReportNotFound) Error() string {
	return fmt.Sprintf("[POST /smsCampaigns/{campaignId}/sendReport][%d] sendSmsReportNotFound  %+v", 404, o.Payload)
}

func (o *SendSmsReportNotFound) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *SendSmsReportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
