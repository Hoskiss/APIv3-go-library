// Code generated by go-swagger; DO NOT EDIT.

package reseller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"APIv3_go_wrapper/models"
)

// CreateChildDomainReader is a Reader for the CreateChildDomain structure.
type CreateChildDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateChildDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateChildDomainCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateChildDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateChildDomainForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateChildDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateChildDomainCreated creates a CreateChildDomainCreated with default headers values
func NewCreateChildDomainCreated() *CreateChildDomainCreated {
	return &CreateChildDomainCreated{}
}

/*CreateChildDomainCreated handles this case with default header values.

Domain added
*/
type CreateChildDomainCreated struct {
}

func (o *CreateChildDomainCreated) Error() string {
	return fmt.Sprintf("[POST /reseller/children/{childAuthKey}/domains][%d] createChildDomainCreated ", 201)
}

func (o *CreateChildDomainCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateChildDomainBadRequest creates a CreateChildDomainBadRequest with default headers values
func NewCreateChildDomainBadRequest() *CreateChildDomainBadRequest {
	return &CreateChildDomainBadRequest{}
}

/*CreateChildDomainBadRequest handles this case with default header values.

bad request
*/
type CreateChildDomainBadRequest struct {
	Payload *models.ErrorModel
}

func (o *CreateChildDomainBadRequest) Error() string {
	return fmt.Sprintf("[POST /reseller/children/{childAuthKey}/domains][%d] createChildDomainBadRequest  %+v", 400, o.Payload)
}

func (o *CreateChildDomainBadRequest) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CreateChildDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChildDomainForbidden creates a CreateChildDomainForbidden with default headers values
func NewCreateChildDomainForbidden() *CreateChildDomainForbidden {
	return &CreateChildDomainForbidden{}
}

/*CreateChildDomainForbidden handles this case with default header values.

Current account is not a reseller
*/
type CreateChildDomainForbidden struct {
	Payload *models.ErrorModel
}

func (o *CreateChildDomainForbidden) Error() string {
	return fmt.Sprintf("[POST /reseller/children/{childAuthKey}/domains][%d] createChildDomainForbidden  %+v", 403, o.Payload)
}

func (o *CreateChildDomainForbidden) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CreateChildDomainForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChildDomainNotFound creates a CreateChildDomainNotFound with default headers values
func NewCreateChildDomainNotFound() *CreateChildDomainNotFound {
	return &CreateChildDomainNotFound{}
}

/*CreateChildDomainNotFound handles this case with default header values.

Child auth key not found
*/
type CreateChildDomainNotFound struct {
	Payload *models.ErrorModel
}

func (o *CreateChildDomainNotFound) Error() string {
	return fmt.Sprintf("[POST /reseller/children/{childAuthKey}/domains][%d] createChildDomainNotFound  %+v", 404, o.Payload)
}

func (o *CreateChildDomainNotFound) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *CreateChildDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
