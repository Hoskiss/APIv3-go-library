// Code generated by go-swagger; DO NOT EDIT.

package reseller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// DeleteChildDomainReader is a Reader for the DeleteChildDomain structure.
type DeleteChildDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteChildDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteChildDomainNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteChildDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteChildDomainForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteChildDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteChildDomainNoContent creates a DeleteChildDomainNoContent with default headers values
func NewDeleteChildDomainNoContent() *DeleteChildDomainNoContent {
	return &DeleteChildDomainNoContent{}
}

/*DeleteChildDomainNoContent handles this case with default header values.

child domain deleted
*/
type DeleteChildDomainNoContent struct {
}

func (o *DeleteChildDomainNoContent) Error() string {
	return fmt.Sprintf("[DELETE /reseller/children/{childAuthKey}/domains/{domainName}][%d] deleteChildDomainNoContent ", 204)
}

func (o *DeleteChildDomainNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChildDomainBadRequest creates a DeleteChildDomainBadRequest with default headers values
func NewDeleteChildDomainBadRequest() *DeleteChildDomainBadRequest {
	return &DeleteChildDomainBadRequest{}
}

/*DeleteChildDomainBadRequest handles this case with default header values.

bad request
*/
type DeleteChildDomainBadRequest struct {
	Payload *models.ErrorModel
}

func (o *DeleteChildDomainBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /reseller/children/{childAuthKey}/domains/{domainName}][%d] deleteChildDomainBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteChildDomainBadRequest) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *DeleteChildDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteChildDomainForbidden creates a DeleteChildDomainForbidden with default headers values
func NewDeleteChildDomainForbidden() *DeleteChildDomainForbidden {
	return &DeleteChildDomainForbidden{}
}

/*DeleteChildDomainForbidden handles this case with default header values.

Current account is not a reseller
*/
type DeleteChildDomainForbidden struct {
	Payload *models.ErrorModel
}

func (o *DeleteChildDomainForbidden) Error() string {
	return fmt.Sprintf("[DELETE /reseller/children/{childAuthKey}/domains/{domainName}][%d] deleteChildDomainForbidden  %+v", 403, o.Payload)
}

func (o *DeleteChildDomainForbidden) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *DeleteChildDomainForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteChildDomainNotFound creates a DeleteChildDomainNotFound with default headers values
func NewDeleteChildDomainNotFound() *DeleteChildDomainNotFound {
	return &DeleteChildDomainNotFound{}
}

/*DeleteChildDomainNotFound handles this case with default header values.

Child auth key not found
*/
type DeleteChildDomainNotFound struct {
	Payload *models.ErrorModel
}

func (o *DeleteChildDomainNotFound) Error() string {
	return fmt.Sprintf("[DELETE /reseller/children/{childAuthKey}/domains/{domainName}][%d] deleteChildDomainNotFound  %+v", 404, o.Payload)
}

func (o *DeleteChildDomainNotFound) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *DeleteChildDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
