// Code generated by go-swagger; DO NOT EDIT.

package reseller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"APIv3_go_wrapper/models"
)

// GetChildDomainsReader is a Reader for the GetChildDomains structure.
type GetChildDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChildDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChildDomainsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetChildDomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetChildDomainsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChildDomainsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetChildDomainsOK creates a GetChildDomainsOK with default headers values
func NewGetChildDomainsOK() *GetChildDomainsOK {
	return &GetChildDomainsOK{}
}

/*GetChildDomainsOK handles this case with default header values.

Sender domains of the child
*/
type GetChildDomainsOK struct {
	Payload models.GetChildDomains
}

func (o *GetChildDomainsOK) Error() string {
	return fmt.Sprintf("[GET /reseller/children/{childAuthKey}/domains][%d] getChildDomainsOK  %+v", 200, o.Payload)
}

func (o *GetChildDomainsOK) GetPayload() models.GetChildDomains {
	return o.Payload
}

func (o *GetChildDomainsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChildDomainsBadRequest creates a GetChildDomainsBadRequest with default headers values
func NewGetChildDomainsBadRequest() *GetChildDomainsBadRequest {
	return &GetChildDomainsBadRequest{}
}

/*GetChildDomainsBadRequest handles this case with default header values.

bad request
*/
type GetChildDomainsBadRequest struct {
	Payload *models.ErrorModel
}

func (o *GetChildDomainsBadRequest) Error() string {
	return fmt.Sprintf("[GET /reseller/children/{childAuthKey}/domains][%d] getChildDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *GetChildDomainsBadRequest) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *GetChildDomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChildDomainsForbidden creates a GetChildDomainsForbidden with default headers values
func NewGetChildDomainsForbidden() *GetChildDomainsForbidden {
	return &GetChildDomainsForbidden{}
}

/*GetChildDomainsForbidden handles this case with default header values.

Current account is not a reseller
*/
type GetChildDomainsForbidden struct {
	Payload *models.ErrorModel
}

func (o *GetChildDomainsForbidden) Error() string {
	return fmt.Sprintf("[GET /reseller/children/{childAuthKey}/domains][%d] getChildDomainsForbidden  %+v", 403, o.Payload)
}

func (o *GetChildDomainsForbidden) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *GetChildDomainsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChildDomainsNotFound creates a GetChildDomainsNotFound with default headers values
func NewGetChildDomainsNotFound() *GetChildDomainsNotFound {
	return &GetChildDomainsNotFound{}
}

/*GetChildDomainsNotFound handles this case with default header values.

Child auth key not found
*/
type GetChildDomainsNotFound struct {
	Payload *models.ErrorModel
}

func (o *GetChildDomainsNotFound) Error() string {
	return fmt.Sprintf("[GET /reseller/children/{childAuthKey}/domains][%d] getChildDomainsNotFound  %+v", 404, o.Payload)
}

func (o *GetChildDomainsNotFound) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *GetChildDomainsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
