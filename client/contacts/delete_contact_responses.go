// Code generated by go-swagger; DO NOT EDIT.

package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/sendinblue/APIv3-go-library/models"
)

// DeleteContactReader is a Reader for the DeleteContact structure.
type DeleteContactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteContactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteContactNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteContactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteContactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteContactMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteContactNoContent creates a DeleteContactNoContent with default headers values
func NewDeleteContactNoContent() *DeleteContactNoContent {
	return &DeleteContactNoContent{}
}

/*DeleteContactNoContent handles this case with default header values.

Contact deleted
*/
type DeleteContactNoContent struct {
}

func (o *DeleteContactNoContent) Error() string {
	return fmt.Sprintf("[DELETE /contacts/{email}][%d] deleteContactNoContent ", 204)
}

func (o *DeleteContactNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteContactBadRequest creates a DeleteContactBadRequest with default headers values
func NewDeleteContactBadRequest() *DeleteContactBadRequest {
	return &DeleteContactBadRequest{}
}

/*DeleteContactBadRequest handles this case with default header values.

bad request
*/
type DeleteContactBadRequest struct {
	Payload *models.ErrorModel
}

func (o *DeleteContactBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /contacts/{email}][%d] deleteContactBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteContactBadRequest) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *DeleteContactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContactNotFound creates a DeleteContactNotFound with default headers values
func NewDeleteContactNotFound() *DeleteContactNotFound {
	return &DeleteContactNotFound{}
}

/*DeleteContactNotFound handles this case with default header values.

Contact not found
*/
type DeleteContactNotFound struct {
	Payload *models.ErrorModel
}

func (o *DeleteContactNotFound) Error() string {
	return fmt.Sprintf("[DELETE /contacts/{email}][%d] deleteContactNotFound  %+v", 404, o.Payload)
}

func (o *DeleteContactNotFound) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *DeleteContactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContactMethodNotAllowed creates a DeleteContactMethodNotAllowed with default headers values
func NewDeleteContactMethodNotAllowed() *DeleteContactMethodNotAllowed {
	return &DeleteContactMethodNotAllowed{}
}

/*DeleteContactMethodNotAllowed handles this case with default header values.

You're not allowed to delete registered email contact with SendinBlue
*/
type DeleteContactMethodNotAllowed struct {
	Payload *models.ErrorModel
}

func (o *DeleteContactMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /contacts/{email}][%d] deleteContactMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *DeleteContactMethodNotAllowed) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *DeleteContactMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
