// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetDeviceBrowserStats get device browser stats
// swagger:model getDeviceBrowserStats
type GetDeviceBrowserStats struct {

	// Number of total clicks for the campaign using the particular browser
	// Required: true
	Clickers *int64 `json:"clickers"`

	// Number of unique clicks for the campaign using the particular browser
	// Required: true
	UniqueClicks *int64 `json:"uniqueClicks"`

	// Number of unique openings for the campaign using the particular browser
	// Required: true
	UniqueViews *int64 `json:"uniqueViews"`

	// Number of openings for the campaign using the particular browser
	// Required: true
	Viewed *int64 `json:"viewed"`
}

// Validate validates this get device browser stats
func (m *GetDeviceBrowserStats) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClickers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUniqueClicks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUniqueViews(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateViewed(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetDeviceBrowserStats) validateClickers(formats strfmt.Registry) error {

	if err := validate.Required("clickers", "body", m.Clickers); err != nil {
		return err
	}

	return nil
}

func (m *GetDeviceBrowserStats) validateUniqueClicks(formats strfmt.Registry) error {

	if err := validate.Required("uniqueClicks", "body", m.UniqueClicks); err != nil {
		return err
	}

	return nil
}

func (m *GetDeviceBrowserStats) validateUniqueViews(formats strfmt.Registry) error {

	if err := validate.Required("uniqueViews", "body", m.UniqueViews); err != nil {
		return err
	}

	return nil
}

func (m *GetDeviceBrowserStats) validateViewed(formats strfmt.Registry) error {

	if err := validate.Required("viewed", "body", m.Viewed); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetDeviceBrowserStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetDeviceBrowserStats) UnmarshalBinary(b []byte) error {
	var res GetDeviceBrowserStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
